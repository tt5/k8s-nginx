apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |-
    user nginx;
    worker_processes  1;
    events {
      worker_connections  10240;
    }
    http {
      proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:5M max_size=1g inactive=10m use_temp_path=on;
      server {
        listen 80;
        server_name tt15551.cc;
        return 301 https://$server_name$request_uri;
      }
      server {
        server_name tt15551.cc;

        listen 443 ssl http2;

        #ssl_certificate /etc/nginx/nginx.crt;
        #ssl_certificate_key /etc/nginx/nginx.key;
        ssl_certificate /etc/nginx-server-certs/tls.crt;
        ssl_certificate_key /etc/nginx-server-certs/tls.key;
        #ssl_protocols TLSv1.2 TLSv1.3;
        #ssl_ciphers HIGH:!aNULL:!MD5;
        #ssl_prefer_server_ciphers on;

        proxy_cache my_cache;
        #proxy_cache_revalidate on;
        proxy_cache_use_stale updating error timeout http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        proxy_cache_valid any 30s;
        proxy_ignore_headers X-Accel-Expires Expires Cache-Control;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $proxy_host;
        proxy_http_version 1.1;

        location ^~ / {
          proxy_pass http://first.tt5.workers.dev;
          http2_push /services/nav;
          http2_push /services/content/home;
          http2_push /services/alpinejs;
        }
        location ^~ /alpha2.ttf {
          root /usr/share/nginx/html;
        }
        location ^~ /services/alpinejs {
          rewrite ^/services/alpinejs /alpine.js break;
          root /usr/share/nginx/html;
        }
        location ^~ /services/nav {
          rewrite ^/services/nav / break;
          proxy_pass http://nav.tt5.workers.dev;
        }
        location ^~ /services/content {
          rewrite ^/services/content/(.*) /$1 break;
          proxy_pass http://content.tt5.workers.dev;
        }
        location ^~ /projects/blog-first {
          rewrite ^/projects/blog-first/(.*) /$1 break;
          resolver kube-dns.kube-system.svc.cluster.local valid=5s;
          proxy_pass http://blog-first.projects.svc.cluster.local;
        }
        location ^~ /public/alpine.js {
          rewrite ^/public/alpine.js /alpine.js break;
          root /usr/share/nginx/html;
        }
        location ^~ /public {
          resolver kube-dns.kube-system.svc.cluster.local valid=5s;
          proxy_pass http://blog-first.projects.svc.cluster.local;
        }
        location ^~ /events {
          rewrite ^/events/(.*) /$1 break;
          resolver kube-dns.kube-system.svc.cluster.local valid=5s;
          proxy_pass http://event-display.rabbitmq.svc.cluster.local;
        }
      }
    }
